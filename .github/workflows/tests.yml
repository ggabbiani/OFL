# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ODOX_URL:   https://github.com/ggabbiani/orthodocs/releases/download/v1.2.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ubuntu-native:
    if: false
    name: Ubuntu (native)
    runs-on: ubuntu-latest
    env:
      ODOX_PKG: orthodocs_1.2.1_amd64.deb
    steps:
    - name: Project checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can
      # access it
      uses: actions/checkout@v3
      with:
        # Number of commits to fetch. 0 indicates all history for all branches
        # and tags (default 1).
        fetch-depth: '0'

    - name: pre-requisites
      # install Ninja 'cause of the automatic build parallelism turned on with
      # the number of processors found in the hosting system
      run: |
        cat /etc/os-release
        sudo apt update
        sudo apt upgrade -y
        # TODO: replace deps.sh with a python version based on pydot (installed via pip)
        sudo apt install -y apt-utils openscad git graphviz imagemagick make python3-venv wget xvfb
        wget ${{env.ODOX_URL}}/${{env.ODOX_PKG}}
        sudo apt install ./${{env.ODOX_PKG}}

    - name: Documentation build
      working-directory: ${{github.workspace}}
      run: |
        python -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r pyreqs.txt
        make -s

    - name: Test runs
      working-directory: ${{github.workspace}}
      run: |
        . .venv/bin/activate
        make -s tests/runs

  # Project build and run tests on Ubuntu based Docker image
  ubuntu-docker:
    name: Ubuntu (Docker)
    runs-on: ubuntu-latest
    steps:
    - name: Project checkout
      # Checks-out repository under $GITHUB_WORKSPACE
      uses: actions/checkout@v3
      with:
        # Number of commits to fetch. 0 indicates all history for all branches
        # and tags (default 1).
        fetch-depth: '0'

    - name: Warming-up
      working-directory: ${{github.workspace}}
      run: |
        sudo apt update
        sudo apt upgrade -y
        # TODO: replace deps.sh with a python version based on pydot (installed via pip)
        sudo apt install -y apt-utils make python3-venv
        python3 -m venv .venv
        . .venv/bin/activate

    - name: Documentation
      run: |
        echo $(pwd)
        make -s docker/ubuntu

    - name: Tests
      run: |
        echo $(pwd)
        make -s docker/ubuntu-tests

  # Project build and run tests on Fedora based Docker image
  fedora-docker:
    if: false
    name: Fedora (Docker)
    runs-on: ubuntu-latest
    env:
      IMAGE: ggabbiani/ofl:fedora-39
    steps:
    - name: Project checkout
      # Checks-out repository under $GITHUB_WORKSPACE
      uses: actions/checkout@v3
      with:
        # Number of commits to fetch. 0 indicates all history for all branches
        # and tags (default 1).
        fetch-depth: '0'

    - name: Documentation
      run: docker run -v ${{github.workspace}}:/import -it --rm ${{env.IMAGE}}

    - name: Tests
      run: docker run -v ${{github.workspace}}:/import -it --rm ${{env.IMAGE}} tests/runs
