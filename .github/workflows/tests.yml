# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NopVer: 21.8.0
  NopTarBall: v21.8.0.tar.gz
  NopSCADlib: https://github.com/nophead/NopSCADlib/archive/refs/tags/v21.8.0.tar.gz
  scad_utils: https://github.com/openscad/scad-utils.git
  LIBS: /home/runner/.local/share/OpenSCAD/libraries
  ODOX_URL: https://github.com/ggabbiani/orthodocs/releases/download/v1.2.1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ubuntu-test:
    name: Ubuntu tests
    runs-on: ubuntu-latest
    env:
      ODOX_PKG: orthodocs_1.2.1_amd64.deb
    steps:
    - name: Project checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      uses: actions/checkout@v3
      with:
        # Number of commits to fetch. 0 indicates all history for all branches and tags (default 1).
        fetch-depth: '0'

    - name: pre-requisites
      # install Ninja 'cause of the automatic build parallelism tuned with the
      # number of processors found in the hosting system
      run: |
        sudo apt update
        sudo apt upgrade -y
        # TODO: replace deps.sh with a python version based on pydot (installed via pip)
        sudo apt install -y graphviz openscad python3-venv wget xvfb
        wget ${{env.ODOX_URL}}/${{env.ODOX_PKG}}
        sudo apt install ./${{env.ODOX_PKG}}
        mkdir -p ${{env.LIBS}}

    - name: NopSCADlib
      working-directory: ${{env.LIBS}}
      run: |
        echo "NopSCADlib: ${{env.NopSCADlib}}"
        wget ${{env.NopSCADlib}}
        tar -xzf ${{env.NopTarBall}}
        ln -s NopSCADlib-${{env.NopVer}} NopSCADlib
        ls -al

    - name: scad-utils
      working-directory: ${{env.LIBS}}
      run: |
        git clone https://github.com/openscad/scad-utils.git

    - name: Documentation buid
      working-directory: ${{github.workspace}}
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r pyreqs.txt
        Xvfb :99 & export DISPLAY=:99
        make -s

    - name: Test runs
      working-directory: ${{github.workspace}}
      run: |
        source .venv/bin/activate
        make -s tests/runs

    # - name: Create platform dependent binary packages
    #   working-directory: ${{github.workspace}}/build
    #   run: cpack

    # - name: Upload produced artifacts
    #   uses: actions/upload-artifact@v3
    #   id: upload-artifacts
    #   with:
    #     name: ${{env.ARTIFACTS}}
    #     path: ${{github.workspace}}/build/*.deb

  # docker based tests (will be replaced by native-tests)
  docker-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: run tests
        run: docker run -v $GITHUB_WORKSPACE/:/import:Z  -t ggabbiani/openscad:v1.5.0
