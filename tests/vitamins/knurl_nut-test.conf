TEST_DESCRIPTION="Knurl nut (aka brass inserts) test file"

TEST_TEMPLATE="template-3d.scad"

# CAMERA="--camera 0,0,0,0,0,0,7"

TEST_INCLUDES="
include <../../lib/OFL/vitamins/knurl_nuts.scad>
"

# TAB_PARAMETERS="
# \$fn            = 50;           // [3:100]
# // When true, debug statements are turned on
# \$fl_debug      = false;
# // When true, disables PREVIEW corrections like FL_NIL
# \$FL_RENDER     = false;
# // Default color for printable items (i.e. artifacts)
# \$fl_filament   = \"DodgerBlue\"; // [DodgerBlue,Blue,OrangeRed,SteelBlue]
# // -2⇒none, -1⇒all, [0..)⇒max depth allowed
# \$FL_TRACES     = -2;     // [-2:10]
# SHOW_LABELS     = false;
# SHOW_SYMBOLS    = false;
# "

TAB_Verbs="
/* [Supported verbs] */

// adds shapes to scene.
\$FL_ADD       = \"ON\";   // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// layout of predefined auxiliary shapes (like predefined screws)
\$FL_ASSEMBLY  = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// adds local reference axes
\$FL_AXES      = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// adds a bounding box containing the object
\$FL_BBOX      = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// layout of predefined drill shapes (like holes with predefined screw diameter)
\$FL_DRILL     = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
"

# TAB_Placement="
# /* [3D Placement] */

# X_PLACE = \"undef\";  // [undef,-1,0,+1]
# Y_PLACE = \"undef\";  // [undef,-1,0,+1]
# Z_PLACE = \"undef\";  // [undef,-1,0,+1]
# "

# TAB_Direction="
# /* [Direction] */
# DIR_NATIVE  = true;
# // ARBITRARY direction vector
# DIR_Z       = [0,0,1];  // [-1:0.1:+1]
# // rotation around
# DIR_R       = 0;        // [-360:360]
# "

TAB_TEST="
/* [Knurl nut] */

SHOW    = \"All\"; // [All, FL_KNUT_M2x4x3p5, FL_KNUT_M2x6x3p5,  FL_KNUT_M2x8x3p5,  FL_KNUT_M2x10x3p5, FL_KNUT_M3x4x5,   FL_KNUT_M3x6x5,    FL_KNUT_M3x8x5,    FL_KNUT_M3x10x5, FL_KNUT_M4x4x6,   FL_KNUT_M4x6x6,    FL_KNUT_M4x8x6,    FL_KNUT_M4x10x6,FL_KNUT_M5x6x7,   FL_KNUT_M5x8x7,    FL_KNUT_M5x10x7]
"

# TEST_PROLOGUE="
# direction = DIR_NATIVE    ? undef : [DIR_Z,DIR_R];
# octant    = fl_parm_Octant(X_PLACE,Y_PLACE,Z_PLACE);
# debug     = fl_parm_Debug(SHOW_LABELS,SHOW_SYMBOLS);

# fl_status();
# "

TEST_CODE="
obj       = SHOW==\"FL_KNUT_M2x4x3p5\"  ? FL_KNUT_M2x4x3p5
          : SHOW==\"FL_KNUT_M2x6x3p5\"  ? FL_KNUT_M2x6x3p5
          : SHOW==\"FL_KNUT_M2x8x3p5\"  ? FL_KNUT_M2x8x3p5
          : SHOW==\"FL_KNUT_M2x10x3p5\" ? FL_KNUT_M2x10x3p5
          : SHOW==\"FL_KNUT_M3x4x5\"    ? FL_KNUT_M3x4x5
          : SHOW==\"FL_KNUT_M3x6x5\"    ? FL_KNUT_M3x6x5
          : SHOW==\"FL_KNUT_M3x8x5\"    ? FL_KNUT_M3x8x5
          : SHOW==\"FL_KNUT_M3x10x5\"   ? FL_KNUT_M3x10x5
          : SHOW==\"FL_KNUT_M4x4x6\"    ? FL_KNUT_M4x4x6
          : SHOW==\"FL_KNUT_M4x6x6\"    ? FL_KNUT_M4x6x6
          : SHOW==\"FL_KNUT_M4x8x6\"    ? FL_KNUT_M4x8x6
          : SHOW==\"FL_KNUT_M4x10x6\"   ? FL_KNUT_M4x10x6
          : SHOW==\"FL_KNUT_M5x6x7\"    ? FL_KNUT_M5x6x7
          : SHOW==\"FL_KNUT_M5x8x7\"    ? FL_KNUT_M5x8x7
          : SHOW==\"FL_KNUT_M5x10x7\"   ? FL_KNUT_M5x10x7
          : undef;
verbs=[
  if (\$FL_ADD!=\"OFF\")       FL_ADD,
  if (\$FL_ASSEMBLY!=\"OFF\")  FL_ASSEMBLY,
  if (\$FL_AXES!=\"OFF\")      FL_AXES,
  if (\$FL_BBOX!=\"OFF\")      FL_BBOX,
  if (\$FL_DRILL!=\"OFF\")     FL_DRILL,
];
fl_trace(\"verbs\",verbs);

module _knut_(verbs,obj) {
  fl_knut(verbs,obj,octant=octant,direction=direction);
}

if (obj)
  fl_knut(verbs,obj,octant=octant,direction=direction);
else
  for(i=[0:len(FL_KNUT_DICT)-1]) let(row=FL_KNUT_DICT[i],l=len(row)) translate(fl_Y(12*i)) {
    fl_trace(\"len(row)\",len(row));
    fl_layout(axis=+FL_X,gap=3,types=row)
      fl_knut(verbs,\$item,octant=octant,direction=direction);
  }
"
