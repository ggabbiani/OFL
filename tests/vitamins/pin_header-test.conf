TEST_DESCRIPTION="NopSCADlib pin header wrapper test file"

TEST_TEMPLATE="template-3d.scad"

# CAMERA="--camera 0,0,0,0,0,0,7"

TEST_INCLUDES="
include <../../lib/OFL/vitamins/pin_headers.scad>
"

# TAB_PARAMETERS="
# \$fn            = 50;           // [3:100]
# // When true, debug statements are turned on
# \$fl_debug      = false;
# // When true, disables PREVIEW corrections like FL_NIL
# \$FL_RENDER     = false;
# // Default color for printable items (i.e. artifacts)
# \$fl_filament   = \"DodgerBlue\"; // [DodgerBlue,Blue,OrangeRed,SteelBlue]
# // -2⇒none, -1⇒all, [0..)⇒max depth allowed
# \$FL_TRACES     = -2;     // [-2:10]
# SHOW_LABELS     = false;
# SHOW_SYMBOLS    = false;
# "

TAB_Verbs="
/* [Supported verbs] */

// adds shapes to scene.
\$FL_ADD       = \"ON\";   // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// adds local reference axes
\$FL_AXES      = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// adds a bounding box containing the object
\$FL_BBOX      = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// layout of predefined cutout shapes (+X,-X,+Y,-Y,+Z,-Z)
\$FL_CUTOUT    = \"OFF\";   // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// layout of predefined drill shapes (like holes with predefined screw diameter)
\$FL_DRILL     = \"OFF\";  // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
"

# TAB_Placement="
# /* [3D Placement] */

# X_PLACE = \"undef\";  // [undef,-1,0,+1]
# Y_PLACE = \"undef\";  // [undef,-1,0,+1]
# Z_PLACE = \"undef\";  // [undef,-1,0,+1]
# "

# TAB_Direction="
# /* [Direction] */
# DIR_NATIVE  = true;
# // ARBITRARY direction vector
# DIR_Z       = [0,0,1];  // [-1:0.1:+1]
# // rotation around
# DIR_R       = 0;        // [-360:360]
# "

TAB_TEST="
/* [Pin Header] */

SHOW          = \"all\"; // [all,custom,FL_PHDR_GPIOHDR,FL_PHDR_GPIOHDR_F,FL_PHDR_GPIOHDR_FL,FL_PHDR_GPIOHDR_F_SMT_LOW]
// ... guess what
PIN_COLOR     = \"base\";   // [base,red]
// tolerance used during FL_CUTOUT
CO_TOLERANCE  = 0.5;      // [0:0.1:5]
// thickness for FL_CUTOUT
CO_T          = 15;     // [0:0.1:20]

/* [Custom pin header] */

TYPE  = \"female\"; // [male,female]
// size in columns x rows
GEOMETRY          = [10,1]; // [1:20]
"



TEST_CODE="
thick     = \$FL_CUTOUT!=\"OFF\"||\$FL_DRILL!=\"OFF\" ? CO_T : undef;
tolerance = \$FL_CUTOUT!=\"OFF\" ? CO_TOLERANCE  : undef;
color     = PIN_COLOR==\"base\"?grey(20):PIN_COLOR;
type      = fl_dict_search(FL_PHDR_DICT,SHOW)[0];
verbs     = fl_verbList([FL_ADD,FL_AXES,FL_BBOX,FL_CUTOUT,FL_DRILL]);

module wrapIt(type) {
  fl_pinHeader(verbs,type,color=color,cut_thick=thick,cut_tolerance=tolerance,octant=octant,direction=direction);
}

// one predefined
if (type)
  wrapIt(type);

// all predefined
else if (SHOW==\"all\")
  layout([for(type=FL_PHDR_DICT) fl_width(type)], 10)
    let(t=FL_PHDR_DICT[\$i])
      wrapIt(t);

// custom
else
  let(
    type  = fl_PinHeader(\"test header\",nop=2p54header,geometry=GEOMETRY,engine=TYPE)
  )   wrapIt(type);
"
