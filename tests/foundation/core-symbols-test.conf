TEST_DESCRIPTION="Cores symbol test"
TEST_TEMPLATE="template-3d.scad"
# CAMERA="--camera 0,0,0,0,0,0,7"
TEST_INCLUDES="
include <../../lib/OFL/foundation/unsafe_defs.scad>

use <../../lib/OFL/foundation/3d-engine.scad>
use <../../lib/OFL/foundation/hole.scad>
use <../../lib/OFL/foundation/label.scad>
"
# TAB_PARAMETERS=""
TAB_Verbs="
/* [Supported verbs] */

// adds shapes to scene.
\$FL_ADD       = \"ON\";   // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
// layout of user passed accessories (like alternative screws)
\$FL_LAYOUT    = \"ON\";   // [OFF,ON,ONLY,DEBUG,TRANSPARENT]
"
TAB_Placement=""
TAB_Direction=""
TAB_TEST="
/* [Test hole] */

// diameter
HOLE_D  = 1;
// normal
HOLE_N  = [0,0,1];
// depth
HOLE_DEPTH  = 2.5;

/* [Symbol] */

SIZE_TYPE       = \"default\";  // [default,scalar,fl_vector]
SIZE_SCALAR     = 0.5;
SIZE_VECTOR     = [1.0,1.0,0.5];
SYMBOL          = \"direction\";  // [direction,hole,plug,point,socket]

/* [Direction Symbol] */

DIRECTION       = [0,0,1];
ROTATION        = 0;      // [-360:360]
"

TEST_PROLOGUE="
fl_status();
verbs=[
  if (\$FL_ADD!=\"OFF\")     FL_ADD,
  if (\$FL_AXES!=\"OFF\")    FL_AXES,
  if (\$FL_LAYOUT!=\"OFF\")  FL_LAYOUT,
];
size  = SIZE_TYPE==\"default\" ? undef : SIZE_TYPE==\"scalar\" ? SIZE_SCALAR : SIZE_VECTOR;
"
TEST_CODE="
if (SYMBOL==\"hole\")
  fl_hole_Context(fl_Hole(O,HOLE_D,HOLE_N,HOLE_DEPTH))
    fl_sym_hole(FL_ADD);
else if (SYMBOL==\"direction\")
  fl_sym_direction(FL_ADD,direction=[DIRECTION,ROTATION],size=size);
else if (SYMBOL==\"point\")
  fl_sym_point(FL_ADD,size=SIZE_SCALAR);
else
  fl_symbol(verbs=verbs,size=size,symbol=SYMBOL)
    fl_label(FL_ADD,\"Ciao!\",size=\$sym_size.y,thick=0.1,direction=\$sym_ldir);

"
